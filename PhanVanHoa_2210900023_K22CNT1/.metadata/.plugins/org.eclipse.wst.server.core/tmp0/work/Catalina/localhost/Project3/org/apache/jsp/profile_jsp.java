/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-18 13:46:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.financemanager.model.Transaction;
import java.util.*;
import com.financemanager.model.User;
import com.financemanager.dao.UserDao;
import java.util.*;
import com.financemanager.model.Category;
import com.financemanager.dao.CategoryDAO;
import java.util.*;
import com.financemanager.model.Budget;
import com.financemanager.dao.BudgetDAO;
import java.util.*;
import com.financemanager.model.Transaction;
import com.financemanager.dao.TransactionDAO;
import java.util.*;
import com.financemanager.model.RecurringTransaction;
import com.financemanager.dao.RecurringTransactionDAO;
import java.util.*;
import com.financemanager.model.Goal;
import com.financemanager.dao.GoalDAO;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(16);
    _jspx_imports_classes.add("com.financemanager.dao.RecurringTransactionDAO");
    _jspx_imports_classes.add("com.financemanager.model.Category");
    _jspx_imports_classes.add("com.financemanager.model.Transaction");
    _jspx_imports_classes.add("com.financemanager.model.Budget");
    _jspx_imports_classes.add("com.financemanager.model.RecurringTransaction");
    _jspx_imports_classes.add("com.financemanager.model.Goal");
    _jspx_imports_classes.add("com.financemanager.dao.CategoryDAO");
    _jspx_imports_classes.add("com.financemanager.model.User");
    _jspx_imports_classes.add("com.financemanager.dao.UserDao");
    _jspx_imports_classes.add("com.financemanager.dao.BudgetDAO");
    _jspx_imports_classes.add("com.financemanager.dao.TransactionDAO");
    _jspx_imports_classes.add("com.financemanager.dao.GoalDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Quản lý chi tiêu cá nhân</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"profile_style.css\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	List<User> listUser = UserDao.getAllUsers();
	String username = session.getAttribute("username").toString();
	String user_id = session.getAttribute("user_id").toString();
	
	User currentUser = new User();
	Category currentCategory = new Category();
	for (User u : listUser) {
		if (u.getUsername().equals(username)) {
			currentUser = u;
		}
	}
	CategoryDAO categoryDao = new CategoryDAO();
	List<Category> categoryList = categoryDao.getCategoriesByUserId(currentUser.getUserId());

	BudgetDAO budgetDao = new BudgetDAO();
	List<Budget> budgetList = budgetDao.getBudgetByUserId(currentUser.getUserId());

	TransactionDAO transactionDao = new TransactionDAO();
	List<Transaction> transactionList = transactionDao.getAllTransactionsByUserId(currentUser.getUserId());

	RecurringTransactionDAO recurringTransactionDAO = new RecurringTransactionDAO();
	List<RecurringTransaction> recurringtransactionList = recurringTransactionDAO.getAllRecurringTransactionsByUserId(currentUser.getUserId());

	GoalDAO goalDAO = new GoalDAO();
	List<Goal> goalList = goalDAO.getAllGoalsByUserId(currentUser.getUserId());
	
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("        <!-- Sidebar -->\r\n");
      out.write("        <div class=\"sidebar\">\r\n");
      out.write("            <div class=\"logo\">Người dùng</div>\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-user me-2\"></i> Thông tin cá nhân</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-money-bill-wave me-2\"></i> Chi tiêu cá nhân</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-wallet me-2\"></i> Ngân sách</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-exchange-alt me-2\"></i> Giao dịch</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-sync-alt me-2\"></i> Giao dịch định kỳ</a></li>\r\n");
      out.write("                <li><a href=\"#\"><i class=\"fas fa-piggy-bank me-2\"></i> Tiết kiệm</a></li>\r\n");
      out.write("                <li><a href=\"https://web.facebook.com/PhanHoa05122004\"><i class=\"fas fa-address-book me-2\"></i> Liên hệ</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Main Content -->\r\n");
      out.write("        <header class=\"fixed-header\">\r\n");
      out.write("            <div>\r\n");
      out.write("                <h1>Chào mừng ");
      out.print(currentUser.getUsername());
      out.write("!</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"submit-section\">\r\n");
      out.write("                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login.jsp\" class=\"logout-btn\">Đăng xuất</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </header>\r\n");
      out.write("        <div class=\"container text-center\">\r\n");
      out.write("            <div class=\"row row-cols-1\">\r\n");
      out.write("                <!-- Thông tin cá nhân -->\r\n");
      out.write("                <div class=\"col mt-2\">\r\n");
      out.write("                    <div class=\"dashboard-content\">\r\n");
      out.write("                        <div class=\"card stats-card\">\r\n");
      out.write("                            <div class=\"card-icon\">\r\n");
      out.write("                                <i class=\"fas fa-user\"></i>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"card-content\">\r\n");
      out.write("                                <h3>Tên người dùng: ");
      out.print(currentUser.getUsername());
      out.write("</h3>\r\n");
      out.write("                                <p class=\"stats-value\">Email: ");
      out.print(currentUser.getEmail());
      out.write("</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Danh sách chi tiêu cá nhân -->\r\n");
      out.write("                <div class=\"col mt-2\">\r\n");
      out.write("                    <div class=\"#\">\r\n");
      out.write("                        <div class=\"card stats-card\">\r\n");
      out.write("                            <table class=\"table\">\r\n");
      out.write("                                <thead>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"col\">Số thứ tự</th>\r\n");
      out.write("                                        <th scope=\"col\">Danh sách chi tiêu cá nhân</th>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                </thead>\r\n");
      out.write("                                <tbody>\r\n");
      out.write("                                    ");
 
                                    int count0 = 1;
                                    for (Category c : categoryList) {
                                    
      out.write("\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"row\">");
      out.print(count0);
      out.write("</th>\r\n");
      out.write("                                        <td>");
      out.print(c.getCategoryName());
      out.write("</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                    ");
 
                                        count0++;
                                    } 
                                    
      out.write("\r\n");
      out.write("                                </tbody>\r\n");
      out.write("                            </table>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Danh sách ngân sách -->\r\n");
      out.write("                <div class=\"col mt-2\">\r\n");
      out.write("                    <div class=\"#\">\r\n");
      out.write("                        <div class=\"card stats-card\">\r\n");
      out.write("                            <table class=\"table\">\r\n");
      out.write("                                <thead>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"col\">Số thứ tự</th>\r\n");
      out.write("                                        <th scope=\"col\">Danh sách ngân sách</th>\r\n");
      out.write("                                        <th scope=\"col\">Giá</th>\r\n");
      out.write("                                        <th scope=\"col\">Thời gian</th>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                </thead>\r\n");
      out.write("                                <tbody>\r\n");
      out.write("                                    ");
 
                                    int count1 = 1;
                                    for (Budget b : budgetList) {
                                    
      out.write("\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"row\">");
      out.print(count1);
      out.write("</th>\r\n");
      out.write("                                        <td>\r\n");
      out.write("                                            ");
 
                                            String cateName = "";
                                            if (categoryList != null) {
                                                for (Category c : categoryList) {
                                                    if (c.getCategoryId() == b.getCategoryId()) {
                                                        cateName = c.getCategoryName();
                                                        break;
                                                    }
                                                }
                                            }
                                            
      out.write(' ');
      out.print(cateName);
      out.write("\r\n");
      out.write("                                        </td>\r\n");
      out.write("                                        <td>");
      out.print(b.getAmount());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(b.getMonth());
      out.write("</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                    ");
 
                                        count1++;
                                    } 
                                    
      out.write("\r\n");
      out.write("                                </tbody>\r\n");
      out.write("                            </table>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Danh sách giao dịch -->\r\n");
      out.write("                <div class=\"col mt-2\">\r\n");
      out.write("                    <div class=\"#\">\r\n");
      out.write("                        <div class=\"card stats-card\">\r\n");
      out.write("                            <table class=\"table\">\r\n");
      out.write("                                <thead>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"col\">Số thứ tự</th>\r\n");
      out.write("                                        <th scope=\"col\">Danh sách giao dịch</th>\r\n");
      out.write("                                        <th scope=\"col\">Giá</th>\r\n");
      out.write("                                        <th scope=\"col\">Mô tả</th>\r\n");
      out.write("                                        <th scope=\"col\">Thời gian</th>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                </thead>\r\n");
      out.write("                                <tbody>\r\n");
      out.write("                                    ");
 
                                    int count2 = 1;
                                    for (Transaction t : transactionList) {
                                    
      out.write("\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"row\">");
      out.print(count2);
      out.write("</th>\r\n");
      out.write("                                        <td>\r\n");
      out.write("                                            ");
 
                                            String cateName = "";
                                            if (categoryList != null) {
                                                for (Category c : categoryList) {
                                                    if (c != null && c.getCategoryId() == t.getCategoryId()) {
                                                        cateName = c.getCategoryName();
                                                        break;
                                                    }
                                                }
                                            }
                                            
      out.write(' ');
      out.print(cateName);
      out.write("\r\n");
      out.write("                                        </td>\r\n");
      out.write("                                        <td>");
      out.print(t.getAmount());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(t.getDescription());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(t.getTransactionDate());
      out.write("</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                    ");
 
                                        count2++;
                                    } 
                                    
      out.write("\r\n");
      out.write("                                </tbody>\r\n");
      out.write("                            </table>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Danh sách giao dịch định kỳ -->\r\n");
      out.write("                <div class=\"col mt-2\">\r\n");
      out.write("                    <div class=\"#\">\r\n");
      out.write("                        <div class=\"card stats-card\">\r\n");
      out.write("                            <table class=\"table\">\r\n");
      out.write("                                <thead>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"col\">Số thứ tự</th>\r\n");
      out.write("                                        <th scope=\"col\">Danh sách giao dịch định kỳ</th>\r\n");
      out.write("                                        <th scope=\"col\">Giá</th>\r\n");
      out.write("                                        <th scope=\"col\">Mô tả</th>\r\n");
      out.write("                                        <th scope=\"col\">Tần suất</th>\r\n");
      out.write("                                        <th scope=\"col\">Ngày bắt đầu</th>\r\n");
      out.write("                                        <th scope=\"col\">Ngày kết thúc</th>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                </thead>\r\n");
      out.write("                                <tbody>\r\n");
      out.write("                                    ");
 
                                    int count3 = 1;
                                    for (RecurringTransaction rt : recurringtransactionList) {
                                    
      out.write("\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"row\">");
      out.print(count3);
      out.write("</th>\r\n");
      out.write("                                        <td>\r\n");
      out.write("                                            ");
 
                                            String cateName = "";
                                            if (categoryList != null) {
                                                for (Category c : categoryList) {
                                                    if (c != null && c.getCategoryId() == rt.getCategoryId()) {
                                                        cateName = c.getCategoryName();
                                                        break;
                                                    }
                                                }
                                            }
                                            
      out.write(' ');
      out.print(cateName);
      out.write("\r\n");
      out.write("                                        </td>\r\n");
      out.write("                                        <td>");
      out.print(rt.getAmount());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(rt.getDescription());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(rt.getFrequency());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(rt.getStartDate());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(rt.getEndDate());
      out.write("</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                    ");
 
                                        count3++;
                                    } 
                                    
      out.write("\r\n");
      out.write("                                </tbody>\r\n");
      out.write("                            </table>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- Danh sách tiết kiệm -->\r\n");
      out.write("                <div class=\"col mt-2\">\r\n");
      out.write("                    <div class=\"#\">\r\n");
      out.write("                        <div class=\"card stats-card\">\r\n");
      out.write("                            <table class=\"table\">\r\n");
      out.write("                                <thead>\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"col\">Số thứ tự</th>\r\n");
      out.write("                                        <th scope=\"col\">Danh sách tiết kiệm</th>\r\n");
      out.write("                                        <th scope=\"col\">Số tiền mục tiêu</th>\r\n");
      out.write("                                        <th scope=\"col\">Số tiền hiện tại</th>\r\n");
      out.write("                                        <th scope=\"col\">Ngày bắt đầu</th>\r\n");
      out.write("                                        <th scope=\"col\">Ngày kết thúc</th>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                </thead>\r\n");
      out.write("                                <tbody>\r\n");
      out.write("                                    ");
 
                                    int count4 = 1;
                                    for (Goal g : goalList) {
                                    
      out.write("\r\n");
      out.write("                                    <tr>\r\n");
      out.write("                                        <th scope=\"row\">");
      out.print(count4);
      out.write("</th>\r\n");
      out.write("                                        <td>");
      out.print(g.getGoalName());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(g.getTargetAmount());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(g.getCurrentAmount());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(g.getTargetDate());
      out.write("</td>\r\n");
      out.write("                                        <td>");
      out.print(g.getCreatedAt());
      out.write("</td>\r\n");
      out.write("                                    </tr>\r\n");
      out.write("                                    ");
 
                                        count4++;
                                    } 
                                    
      out.write("\r\n");
      out.write("                                </tbody>\r\n");
      out.write("                            </table>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
