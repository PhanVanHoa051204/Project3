/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-14 10:33:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ChiTieu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.financemanager.dao.CategoryDAO;
import com.financemanager.dao.UserDao;
import com.financemanager.model.Category;
import com.financemanager.model.User;
import java.util.*;

public final class updateCategory_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("com.financemanager.model.Category");
    _jspx_imports_classes.add("com.financemanager.dao.CategoryDAO");
    _jspx_imports_classes.add("com.financemanager.dao.UserDao");
    _jspx_imports_classes.add("com.financemanager.model.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Update danh mục chi tiêu</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"container\">\r\n");
      out.write("	<h2 class=\"mt-4\">Sửa chi tiêu</h2>\r\n");
      out.write("	");
 
    String role = (String) session.getAttribute("role");
    if (role == null || !"admin".equals(role)) {
        response.sendRedirect("users.jsp");
        return;
    }
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("	");

	// Get the category ID from the request parameter and handle potential null value
	String categoryIdStr = request.getParameter("category_id");

	// Check if category_id is null or empty
	if (categoryIdStr == null || categoryIdStr.trim().isEmpty()) {
		out.println("<p>Category ID is missing.</p>");
		return; // Stop processing if category_id is missing
	}

	int categoryId = 0;
	try {
		categoryId = Integer.parseInt(categoryIdStr);
	} catch (NumberFormatException e) {
		out.println("<p>Invalid Category ID format.</p>");
		return; // Stop processing if category_id is invalid
	}

	// Fetch the category from the database using the ID
	CategoryDAO categoryDAO = new CategoryDAO();
	Category category = categoryDAO.getCategoryById(categoryId);

	// Check if the category exists
	if (category == null) {
		out.println("<p>Category not found.</p>");
		return; // Stop processing further if category is not found
	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/categories\"\r\n");
      out.write("		method=\"post\">\r\n");
      out.write("		<input type=\"hidden\" name=\"action\" value=\"update\"> <input\r\n");
      out.write("			type=\"hidden\" name=\"category_id\"\r\n");
      out.write("			value=\"");
      out.print(category.getCategoryId());
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("		<div class=\"form-group\">\r\n");
      out.write("			<label for=\"category_name\">Tên chi tiêu</label> <input type=\"text\"\r\n");
      out.write("				class=\"form-control\" id=\"category_name\" name=\"category_name\"\r\n");
      out.write("				value=\"");
      out.print(category.getCategoryName());
      out.write("\" required>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"form-group\">\r\n");
      out.write("			<label for=\"user_id\">User ID:</label> <select id=\"user_id\"\r\n");
      out.write("				name=\"user_id\">\r\n");
      out.write("				");

				List<User> listUser = UserDao.getAllUsers();
				for (User user : listUser) {
				
      out.write("\r\n");
      out.write("				<option value=\"");
      out.print(user.getUserId());
      out.write('"');
      out.write('>');
      out.print(user.getUserId());
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print( user.getUsername() );
      out.write("</option>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("			</select>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<button type=\"submit\" class=\"btn btn-primary\">Update</button>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	<!-- Back to Category List -->\r\n");
      out.write("	<a href=\"categories.jsp\" class=\"btn btn-secondary mt-3\">Quay lại</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
