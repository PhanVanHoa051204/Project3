package com.financemanager.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.financemanager.dao.CategoryDAO;
import com.financemanager.model.Category;

/**
 * Servlet implementation class CategoryServlet
 */
@WebServlet("/categories")
public class CategoryServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private CategoryDAO categoryDAO;

	public void init() {
		try {
			categoryDAO = new CategoryDAO();
		} catch (Exception e) {
			throw new RuntimeException("Error initializing CategoryDAO", e);
		}
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		
		String action = request.getParameter("action");
		int cateId = Integer.parseInt(request.getParameter("category_id"));
		if(action.equals("delete")) {
			boolean isDelete = categoryDAO.deleteCategory(cateId);
			if (isDelete) {
				response.sendRedirect("/Project3/ChiTieu/categories.jsp");
			} else {

				// Xử lý khi không thêm được, có thể thông báo lỗi cho người dùng
				response.getWriter().println("Error while delete category.");
			}
		}
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String categoryName = request.getParameter("category_name");
		int userId = Integer.parseInt(request.getParameter("user_id"));
		int cateId = Integer.parseInt(request.getParameter("category_id"));
		String action = request.getParameter("action");

		// Tạo đối tượng Category
		Category category = new Category(cateId, categoryName, userId);
		if (action.equals("add")) {
			// Thêm danh mục mới vào cơ sở dữ liệu
			boolean isAdded = categoryDAO.addCategory(category);

			if (isAdded) {
				response.sendRedirect("/Project3/ChiTieu/categories.jsp"); // Điều hướng lại danh sách categories sau
																			// khi thêm
			} else {

				// Xử lý khi không thêm được, có thể thông báo lỗi cho người dùng
				response.getWriter().println("Error while adding category.");
			}
		} else if (action.equals("update")) {
			boolean isUpdate = categoryDAO.updateCategory(category);
			if (isUpdate) {
				response.sendRedirect("/Project3/ChiTieu/categories.jsp"); // Điều hướng lại danh sách categories sau
																			// khi thêm
			} else {

				// Xử lý khi không thêm được, có thể thông báo lỗi cho người dùng
				response.getWriter().println("Error while updating category.");
			}
		}

	}
}
