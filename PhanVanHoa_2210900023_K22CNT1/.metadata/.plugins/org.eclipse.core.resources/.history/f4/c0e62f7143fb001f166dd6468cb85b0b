package com.financemanager.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.financemanager.dao.CategoryDAO;
import com.financemanager.model.Category;

/**
 * Servlet implementation class CategoryServlet
 */
@WebServlet("/categories")
public class CategoryServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
    private CategoryDAO categoryDAO;

    public void init() {
        try {
            categoryDAO = new CategoryDAO();
        } catch (Exception e) {
            throw new RuntimeException("Error initializing CategoryDAO", e);
        }
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        List<Category> categories = categoryDAO.getAllCategories();
        request.setAttribute("categories", categories);
        request.getRequestDispatcher("/ChiTieu/categories.jsp").forward(request, response);
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String categoryName = request.getParameter("category_name");
        int userId = Integer.parseInt(request.getParameter("user_id"));
        
        // Tạo đối tượng Category
        Category category = new Category(0, categoryName, userId);
        
        // Thêm danh mục mới vào cơ sở dữ liệu
        boolean isAdded = categoryDAO.addCategory(category);

        if (isAdded) {
            response.sendRedirect("/Project3/ChiTieu/categories.jsp");  // Điều hướng lại danh sách categories sau khi thêm
        } else {
        	
            // Xử lý khi không thêm được, có thể thông báo lỗi cho người dùng
            response.getWriter().println("Error while adding category.");
        }
    }
 // Handling Update (PUT)
    	protected void doUpdate(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	        int categoryId = Integer.parseInt(request.getParameter("category_id"));
	        String categoryName = request.getParameter("category_name");
	        int userId = Integer.parseInt(request.getParameter("user_id"));
	
	        Category category = new Category(categoryId, categoryName, userId);
	
	        boolean isUpdated = categoryDAO.updateCategory(category);
	
	        if (isUpdated) {
	            response.sendRedirect("/Project3/ChiTieu/categories.jsp");  // Redirect after updating
	        } else {
	            response.getWriter().println("Error while updating category.");
	        }
	    }

    // Handling Delete (DELETE)
	    protected void doDelete(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	        int categoryId = Integer.parseInt(request.getParameter("category_id"));
	
	        boolean isDeleted = categoryDAO.deleteCategory(categoryId);
	
	        if (isDeleted) {
	            response.sendRedirect("/Project3/ChiTieu/categories.jsp");  // Redirect after deleting
	        } else {
	            response.getWriter().println("Error while deleting category.");
	        }
	    }
}
